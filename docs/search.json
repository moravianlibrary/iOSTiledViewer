{"Protocols/ITVScrollViewGestureDelegate.html#/c:@M@iOSTiledViewer@objc(pl)ITVScrollViewGestureDelegate(im)didTapWithType:location:":{"name":"didTap(type:location:)","abstract":"<p>Method is called right after any of single or double tap event occurs.</p>","parent_name":"ITVScrollViewGestureDelegate"},"Protocols/ITVScrollViewDelegate.html#/c:@M@iOSTiledViewer@objc(pl)ITVScrollViewDelegate(im)didFinishLoadingWithError:":{"name":"didFinishLoading(error:)","abstract":"<p>Method called right after image source is recognized and it&rsquo;s property file is downloaded. In this moment you can ask ITVScrollView for the minimum and maximum zoom scale and other image properties.</p>","parent_name":"ITVScrollViewDelegate"},"Protocols/ITVScrollViewDelegate.html#/c:@M@iOSTiledViewer@objc(pl)ITVScrollViewDelegate(im)errorDidOccurWithError:":{"name":"errorDidOccur(error:)","abstract":"<p>Method called on error occurence. It is called only when didFinishLoading(error:) method has been called before.</p>","parent_name":"ITVScrollViewDelegate"},"Protocols/ITVScrollViewDelegate.html":{"name":"ITVScrollViewDelegate","abstract":"<p>Protocol that should be implemented by object using iOSTiledViewer library. You receive errors and other important information about image states and image itself.</p>"},"Protocols/ITVScrollViewGestureDelegate.html":{"name":"ITVScrollViewGestureDelegate","abstract":"<p>Protocol for receiving gesture events from ITVScrollView class. Delegate will be informed about single tap, double tap and rotation after any of these events occure.</p>"},"Enums/ITVGestureEventType.html#/c:@M@iOSTiledViewer@E@ITVGestureEventType@ITVGestureEventTypeSingleTap":{"name":"singleTap","parent_name":"ITVGestureEventType"},"Enums/ITVGestureEventType.html#/c:@M@iOSTiledViewer@E@ITVGestureEventType@ITVGestureEventTypeDoubleTap":{"name":"doubleTap","parent_name":"ITVGestureEventType"},"Enums/ITVImageAPI.html#/c:@M@iOSTiledViewer@E@ITVImageAPI@ITVImageAPIIIIF":{"name":"IIIF","abstract":"<p>IIIF Image API</p>","parent_name":"ITVImageAPI"},"Enums/ITVImageAPI.html#/c:@M@iOSTiledViewer@E@ITVImageAPI@ITVImageAPIZoomify":{"name":"Zoomify","abstract":"<p>Zoomify API</p>","parent_name":"ITVImageAPI"},"Enums/ITVImageAPI.html#/c:@M@iOSTiledViewer@E@ITVImageAPI@ITVImageAPIRaw":{"name":"Raw","abstract":"<p>Raw image which does not support any APIs above. Supported formats are jpg, png, gif and webp</p>","parent_name":"ITVImageAPI"},"Enums/ITVImageAPI.html#/c:@M@iOSTiledViewer@E@ITVImageAPI@ITVImageAPIUnknown":{"name":"Unknown","abstract":"<p>Some other API</p>","parent_name":"ITVImageAPI"},"Enums/ITVImageAPI.html":{"name":"ITVImageAPI","abstract":"<p>Enum of supported image apis.</p>"},"Enums/ITVGestureEventType.html":{"name":"ITVGestureEventType","abstract":"<p>Enum of supported gesture events.</p>"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC11itvDelegateAA0cdF0_pSgv":{"name":"itvDelegate","abstract":"<p>Delegate for receiving errors and some important events.</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC18itvGestureDelegateAA0cdfG0_pSgv":{"name":"itvGestureDelegate","abstract":"<p>Delegate for receiving gesture events.</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC19handleGestureEventsSayAA19ITVGestureEventTypeOGv":{"name":"handleGestureEvents","abstract":"<p>Events that ITVScrollView handles automatically. Default is all. Though there is currently no automatic operation for singleTap. Note that this does not prevent delegating about missing events.</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC11isZoomedOutSbv":{"name":"isZoomedOut","abstract":"<p>Returns true only if content is not scaled.</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC12imageFormatsSaySSGSgv":{"name":"imageFormats","abstract":"<p>Returns an array of possible image formats as Strings.</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC13currentFormatSSSgv":{"name":"currentFormat","abstract":"<p>Returns and sets current image format</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC14imageQualitiesSaySSGSgv":{"name":"imageQualities","abstract":"<p>Returns an array of possible image qualities as Strings.</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC14currentQualitySSSgv":{"name":"currentQuality","abstract":"<p>Returns and sets current image quality</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC10zoomScalesSay12CoreGraphics7CGFloatVGv":{"name":"zoomScales","abstract":"<p>Returns array of possible zoom scales.</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/c:@M@iOSTiledViewer@objc(cs)ITVScrollView(py)bounds":{"name":"bounds","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/c:@M@iOSTiledViewer@objc(cs)ITVScrollView(im)awakeFromNib":{"name":"awakeFromNib()","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC11rotateImagey12CoreGraphics7CGFloatV5angle_tF":{"name":"rotateImage(angle:)","abstract":"<p>Call this method to rotate an image.</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC9loadImageySS_AA11ITVImageAPIO3apitF":{"name":"loadImage(_:api:)","abstract":"<p>Method for loading image.</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC11zoomToScaley12CoreGraphics7CGFloatV_Sb8animatedtF":{"name":"zoomToScale(_:animated:)","abstract":"<p>Method for zooming.</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC23didRecieveMemoryWarningyyF":{"name":"didRecieveMemoryWarning()","abstract":"<p>Method for releasing cached images when device runs low on memory. Should be called by UIViewController when needed.</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC12refreshTilesyyF":{"name":"refreshTiles()","abstract":"<p>Use to immediately refresh layout</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/s:14iOSTiledViewer13ITVScrollViewC20performDoubleTapZoomyyF":{"name":"performDoubleTapZoom()","abstract":"<p>Method that changes zoom without user interaction accordingly:</p>","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/c:@CM@iOSTiledViewer@objc(cs)ITVScrollView(im)scrollViewDidZoom:":{"name":"scrollViewDidZoom(_:)","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/c:@CM@iOSTiledViewer@objc(cs)ITVScrollView(im)scrollViewDidEndZooming:withView:atScale:":{"name":"scrollViewDidEndZooming(_:with:atScale:)","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/c:@CM@iOSTiledViewer@objc(cs)ITVScrollView(im)viewForZoomingInScrollView:":{"name":"viewForZooming(in:)","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html#/c:@CM@iOSTiledViewer@objc(cs)ITVScrollView(im)gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:":{"name":"gestureRecognizer(_:shouldRecognizeSimultaneouslyWith:)","parent_name":"ITVScrollView"},"Classes/ITVScrollView.html":{"name":"ITVScrollView","abstract":"<p>The main class of the iOSTiledViewer library. All communication is done throught this class. See example project to see how to set correctly the class. It has to be initialized through storyboard."},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}